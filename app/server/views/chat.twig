{% extends 'layout.twig' %}

{% block content %}
<h1>Chat with {{ to }}</h1>
<form action="/" method="post" id="formulaire_chat">
	<input type="text" name="message" id="message" placeholder="Votre message..." size="50" autofocus />
	<input type="hidden" name="to" id="to" value="{{ to }}" />
	<input type="submit" id="envoi_message" value="Envoyer" />
</form>

<section id="zone_chat"></section>
{% endblock %}

{% block javascript %}
	/* websocket */
	// Connexion à socket.io
	var socket = io.connect('http://127.0.0.1:3000');
	var userToPM = undefined;

	// On demande le pseudo, on l'envoie au serveur et on l'affiche dans le titre
	var pseudo = '{{ session.user.user }}';
	socket.emit('choose nickname', pseudo);

	$('#formulaire_chat').submit(function () {
		var message = $('#message').val();
		//socket.emit('private message', message); // Transmet le message aux autres
		socket.emit('private message', {msg: message, userToPM: document.getElementById('to').value });
		return false; // Permet de bloquer l'envoi "classique" du formulaire
	});

	socket.on('message', function(data) {
		$('#zone_chat').prepend(data);
	});

	// Smitha

	socket.on('private message', function(data){
		alert(data.msg);
	});

	//socket.close('close');
	/*
	window.onbeforeunload = function() {
		socket.emit('close',  pseudo);
	};
	*/

	/**********************************
	// Quand on reçoit un message, on l'insère dans la page
	socket.on('message', function(data) {
		insereMessage(data.pseudo, data.message)
	})

	// Quand un nouveau client se connecte, on affiche l'information
	socket.on('nouveau_client', function(pseudo) {
		$('#zone_chat').prepend('<p><em>' + pseudo + ' a rejoint le Chat !</em></p>');
	})

	// Lorsqu'on envoie le formulaire, on transmet le message et on l'affiche sur la page
	$('#formulaire_chat').submit(function () {
		var message = $('#message').val();
		socket.emit('message', message); // Transmet le message aux autres
		insereMessage(pseudo, message); // Affiche le message aussi sur notre page
		$('#message').val('').focus(); // Vide la zone de Chat et remet le focus dessus
		return false; // Permet de bloquer l'envoi "classique" du formulaire
	});

	// Ajoute un message dans la page
	function insereMessage(pseudo, message) {
		$('#zone_chat').prepend('<p><strong>' + pseudo + '</strong> ' + message + '</p>');
	}
	*/
	// endwebsocket

$('#formulaire_chat').submit(function () {

	$.post('/new-message', { to : '{{ to }}' , message : $('#message').val() });
	$('#message').val('').focus();
});

var getMessage = function() {
	$.get('/get-message/{{ to }}', function(data) {
		$('#zone_chat').html(data);
	});
	$.post('/reset-nbmessageunread/{{ to }}', function(data) {});
}

getMessage();
setInterval(getMessage, 500);

{% endblock %}
